// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tensorflow_serving/apis/predict.proto
// Protobuf Java Version: 4.28.0-rc3

package tensorflow.serving;

public final class Predict {
  private Predict() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 0,
      /* suffix= */ "-rc3",
      Predict.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface PredictRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.PredictRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return Whether the modelSpec field is set.
     */
    boolean hasModelSpec();
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return The modelSpec.
     */
    tensorflow.serving.Model.ModelSpec getModelSpec();
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     */
    tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder();

    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    int getInputsCount();
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    boolean containsInputs(
        java.lang.String key);
    /**
     * Use {@link #getInputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
    getInputs();
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
    getInputsMap();
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    /* nullable */
org.tensorflow.framework.TensorProto getInputsOrDefault(
        java.lang.String key,
        /* nullable */
org.tensorflow.framework.TensorProto defaultValue);
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    org.tensorflow.framework.TensorProto getInputsOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @return A list containing the outputFilter.
     */
    java.util.List<java.lang.String>
        getOutputFilterList();
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @return The count of outputFilter.
     */
    int getOutputFilterCount();
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @param index The index of the element to return.
     * @return The outputFilter at the given index.
     */
    java.lang.String getOutputFilter(int index);
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the outputFilter at the given index.
     */
    com.google.protobuf.ByteString
        getOutputFilterBytes(int index);

    /**
     * <pre>
     * Options for streaming requests to control how multiple requests/responses
     * are handled within a single stream.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
     * @return Whether the predictStreamedOptions field is set.
     */
    boolean hasPredictStreamedOptions();
    /**
     * <pre>
     * Options for streaming requests to control how multiple requests/responses
     * are handled within a single stream.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
     * @return The predictStreamedOptions.
     */
    tensorflow.serving.Predict.PredictStreamedOptions getPredictStreamedOptions();
    /**
     * <pre>
     * Options for streaming requests to control how multiple requests/responses
     * are handled within a single stream.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
     */
    tensorflow.serving.Predict.PredictStreamedOptionsOrBuilder getPredictStreamedOptionsOrBuilder();

    /**
     * <pre>
     * Client identifier to group requests belonging to a specific entity.
     * Example entities can be product ids, service names, user ids etc.
     * Servers can use this to optimize placement, caching and colocation.
     * TODO(b/329897437): Migrate to client_id in RequestOptions.
     * </pre>
     *
     * <code>optional bytes client_id = 6;</code>
     * @return Whether the clientId field is set.
     */
    boolean hasClientId();
    /**
     * <pre>
     * Client identifier to group requests belonging to a specific entity.
     * Example entities can be product ids, service names, user ids etc.
     * Servers can use this to optimize placement, caching and colocation.
     * TODO(b/329897437): Migrate to client_id in RequestOptions.
     * </pre>
     *
     * <code>optional bytes client_id = 6;</code>
     * @return The clientId.
     */
    com.google.protobuf.ByteString getClientId();

    /**
     * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
     * @return Whether the requestOptions field is set.
     */
    boolean hasRequestOptions();
    /**
     * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
     * @return The requestOptions.
     */
    tensorflow.serving.Predict.PredictRequest.RequestOptions getRequestOptions();
    /**
     * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
     */
    tensorflow.serving.Predict.PredictRequest.RequestOptionsOrBuilder getRequestOptionsOrBuilder();
  }
  /**
   * <pre>
   * PredictRequest specifies which TensorFlow model to run, as well as
   * how inputs are mapped to tensors and how outputs are filtered before
   * returning to user.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.PredictRequest}
   */
  public static final class PredictRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.PredictRequest)
      PredictRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "-rc3",
        PredictRequest.class.getName());
    }
    // Use PredictRequest.newBuilder() to construct.
    private PredictRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PredictRequest() {
      outputFilter_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      clientId_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetInputs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Predict.PredictRequest.class, tensorflow.serving.Predict.PredictRequest.Builder.class);
    }

    public interface RequestOptionsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.serving.PredictRequest.RequestOptions)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Client identifier to group requests belonging to a specific entity.
       * Example entities can be product ids, service names, user ids etc.
       * Servers can use this to optimize placement, caching and colocation.
       * </pre>
       *
       * <code>optional bytes client_id = 1;</code>
       * @return Whether the clientId field is set.
       */
      boolean hasClientId();
      /**
       * <pre>
       * Client identifier to group requests belonging to a specific entity.
       * Example entities can be product ids, service names, user ids etc.
       * Servers can use this to optimize placement, caching and colocation.
       * </pre>
       *
       * <code>optional bytes client_id = 1;</code>
       * @return The clientId.
       */
      com.google.protobuf.ByteString getClientId();

      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
       * @return Whether the deterministicMode field is set.
       */
      boolean hasDeterministicMode();
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
       * @return The enum numeric value on the wire for deterministicMode.
       */
      int getDeterministicModeValue();
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
       * @return The deterministicMode.
       */
      tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode getDeterministicMode();
    }
    /**
     * <pre>
     * Options for PredictRequest.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.PredictRequest.RequestOptions}
     */
    public static final class RequestOptions extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:tensorflow.serving.PredictRequest.RequestOptions)
        RequestOptionsOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "-rc3",
          RequestOptions.class.getName());
      }
      // Use RequestOptions.newBuilder() to construct.
      private RequestOptions(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private RequestOptions() {
        clientId_ = com.google.protobuf.ByteString.EMPTY;
        deterministicMode_ = 0;
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_RequestOptions_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_RequestOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Predict.PredictRequest.RequestOptions.class, tensorflow.serving.Predict.PredictRequest.RequestOptions.Builder.class);
      }

      /**
       * <pre>
       * Deterministic mode for the request. When specified, model servers will
       * reduce numeric instability based on different mode selections.
       * </pre>
       *
       * Protobuf enum {@code tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode}
       */
      public enum DeterministicMode
          implements com.google.protobuf.ProtocolMessageEnum {
        /**
         * <code>DETERMINISTIC_MODE_UNSPECIFIED = 0;</code>
         */
        DETERMINISTIC_MODE_UNSPECIFIED(0),
        /**
         * <pre>
         * Only supported in disaggregated serving. When set, the request will be
         * pinned to a fixed decoder slot index that's deterministic across
         * processes.
         * </pre>
         *
         * <code>FIXED_DECODER_SLOT = 1;</code>
         */
        FIXED_DECODER_SLOT(1),
        UNRECOGNIZED(-1),
        ;

        static {
          com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
            com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
            /* major= */ 4,
            /* minor= */ 28,
            /* patch= */ 0,
            /* suffix= */ "-rc3",
            DeterministicMode.class.getName());
        }
        /**
         * <code>DETERMINISTIC_MODE_UNSPECIFIED = 0;</code>
         */
        public static final int DETERMINISTIC_MODE_UNSPECIFIED_VALUE = 0;
        /**
         * <pre>
         * Only supported in disaggregated serving. When set, the request will be
         * pinned to a fixed decoder slot index that's deterministic across
         * processes.
         * </pre>
         *
         * <code>FIXED_DECODER_SLOT = 1;</code>
         */
        public static final int FIXED_DECODER_SLOT_VALUE = 1;


        public final int getNumber() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
          }
          return value;
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static DeterministicMode valueOf(int value) {
          return forNumber(value);
        }

        /**
         * @param value The numeric wire value of the corresponding enum entry.
         * @return The enum associated with the given numeric wire value.
         */
        public static DeterministicMode forNumber(int value) {
          switch (value) {
            case 0: return DETERMINISTIC_MODE_UNSPECIFIED;
            case 1: return FIXED_DECODER_SLOT;
            default: return null;
          }
        }

        public static com.google.protobuf.Internal.EnumLiteMap<DeterministicMode>
            internalGetValueMap() {
          return internalValueMap;
        }
        private static final com.google.protobuf.Internal.EnumLiteMap<
            DeterministicMode> internalValueMap =
              new com.google.protobuf.Internal.EnumLiteMap<DeterministicMode>() {
                public DeterministicMode findValueByNumber(int number) {
                  return DeterministicMode.forNumber(number);
                }
              };

        public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
          if (this == UNRECOGNIZED) {
            throw new java.lang.IllegalStateException(
                "Can't get the descriptor of an unrecognized enum value.");
          }
          return getDescriptor().getValues().get(ordinal());
        }
        public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }
        public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
          return tensorflow.serving.Predict.PredictRequest.RequestOptions.getDescriptor().getEnumTypes().get(0);
        }

        private static final DeterministicMode[] VALUES = values();

        public static DeterministicMode valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
          if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
          }
          if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
          }
          return VALUES[desc.getIndex()];
        }

        private final int value;

        private DeterministicMode(int value) {
          this.value = value;
        }

        // @@protoc_insertion_point(enum_scope:tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode)
      }

      private int bitField0_;
      public static final int CLIENT_ID_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString clientId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Client identifier to group requests belonging to a specific entity.
       * Example entities can be product ids, service names, user ids etc.
       * Servers can use this to optimize placement, caching and colocation.
       * </pre>
       *
       * <code>optional bytes client_id = 1;</code>
       * @return Whether the clientId field is set.
       */
      @java.lang.Override
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Client identifier to group requests belonging to a specific entity.
       * Example entities can be product ids, service names, user ids etc.
       * Servers can use this to optimize placement, caching and colocation.
       * </pre>
       *
       * <code>optional bytes client_id = 1;</code>
       * @return The clientId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getClientId() {
        return clientId_;
      }

      public static final int DETERMINISTIC_MODE_FIELD_NUMBER = 2;
      private int deterministicMode_ = 0;
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
       * @return Whether the deterministicMode field is set.
       */
      @java.lang.Override public boolean hasDeterministicMode() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
       * @return The enum numeric value on the wire for deterministicMode.
       */
      @java.lang.Override public int getDeterministicModeValue() {
        return deterministicMode_;
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
       * @return The deterministicMode.
       */
      @java.lang.Override public tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode getDeterministicMode() {
        tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode result = tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode.forNumber(deterministicMode_);
        return result == null ? tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBytes(1, clientId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          output.writeEnum(2, deterministicMode_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, clientId_);
        }
        if (((bitField0_ & 0x00000002) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, deterministicMode_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.serving.Predict.PredictRequest.RequestOptions)) {
          return super.equals(obj);
        }
        tensorflow.serving.Predict.PredictRequest.RequestOptions other = (tensorflow.serving.Predict.PredictRequest.RequestOptions) obj;

        if (hasClientId() != other.hasClientId()) return false;
        if (hasClientId()) {
          if (!getClientId()
              .equals(other.getClientId())) return false;
        }
        if (hasDeterministicMode() != other.hasDeterministicMode()) return false;
        if (hasDeterministicMode()) {
          if (deterministicMode_ != other.deterministicMode_) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasClientId()) {
          hash = (37 * hash) + CLIENT_ID_FIELD_NUMBER;
          hash = (53 * hash) + getClientId().hashCode();
        }
        if (hasDeterministicMode()) {
          hash = (37 * hash) + DETERMINISTIC_MODE_FIELD_NUMBER;
          hash = (53 * hash) + deterministicMode_;
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.serving.Predict.PredictRequest.RequestOptions parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.serving.Predict.PredictRequest.RequestOptions prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Options for PredictRequest.
       * </pre>
       *
       * Protobuf type {@code tensorflow.serving.PredictRequest.RequestOptions}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.serving.PredictRequest.RequestOptions)
          tensorflow.serving.Predict.PredictRequest.RequestOptionsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_RequestOptions_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_RequestOptions_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.serving.Predict.PredictRequest.RequestOptions.class, tensorflow.serving.Predict.PredictRequest.RequestOptions.Builder.class);
        }

        // Construct using tensorflow.serving.Predict.PredictRequest.RequestOptions.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          clientId_ = com.google.protobuf.ByteString.EMPTY;
          deterministicMode_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_RequestOptions_descriptor;
        }

        @java.lang.Override
        public tensorflow.serving.Predict.PredictRequest.RequestOptions getDefaultInstanceForType() {
          return tensorflow.serving.Predict.PredictRequest.RequestOptions.getDefaultInstance();
        }

        @java.lang.Override
        public tensorflow.serving.Predict.PredictRequest.RequestOptions build() {
          tensorflow.serving.Predict.PredictRequest.RequestOptions result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public tensorflow.serving.Predict.PredictRequest.RequestOptions buildPartial() {
          tensorflow.serving.Predict.PredictRequest.RequestOptions result = new tensorflow.serving.Predict.PredictRequest.RequestOptions(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(tensorflow.serving.Predict.PredictRequest.RequestOptions result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.clientId_ = clientId_;
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.deterministicMode_ = deterministicMode_;
            to_bitField0_ |= 0x00000002;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.serving.Predict.PredictRequest.RequestOptions) {
            return mergeFrom((tensorflow.serving.Predict.PredictRequest.RequestOptions)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.serving.Predict.PredictRequest.RequestOptions other) {
          if (other == tensorflow.serving.Predict.PredictRequest.RequestOptions.getDefaultInstance()) return this;
          if (other.hasClientId()) {
            setClientId(other.getClientId());
          }
          if (other.hasDeterministicMode()) {
            setDeterministicMode(other.getDeterministicMode());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  clientId_ = input.readBytes();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  deterministicMode_ = input.readEnum();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.ByteString clientId_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * Client identifier to group requests belonging to a specific entity.
         * Example entities can be product ids, service names, user ids etc.
         * Servers can use this to optimize placement, caching and colocation.
         * </pre>
         *
         * <code>optional bytes client_id = 1;</code>
         * @return Whether the clientId field is set.
         */
        @java.lang.Override
        public boolean hasClientId() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * Client identifier to group requests belonging to a specific entity.
         * Example entities can be product ids, service names, user ids etc.
         * Servers can use this to optimize placement, caching and colocation.
         * </pre>
         *
         * <code>optional bytes client_id = 1;</code>
         * @return The clientId.
         */
        @java.lang.Override
        public com.google.protobuf.ByteString getClientId() {
          return clientId_;
        }
        /**
         * <pre>
         * Client identifier to group requests belonging to a specific entity.
         * Example entities can be product ids, service names, user ids etc.
         * Servers can use this to optimize placement, caching and colocation.
         * </pre>
         *
         * <code>optional bytes client_id = 1;</code>
         * @param value The clientId to set.
         * @return This builder for chaining.
         */
        public Builder setClientId(com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          clientId_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Client identifier to group requests belonging to a specific entity.
         * Example entities can be product ids, service names, user ids etc.
         * Servers can use this to optimize placement, caching and colocation.
         * </pre>
         *
         * <code>optional bytes client_id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearClientId() {
          bitField0_ = (bitField0_ & ~0x00000001);
          clientId_ = getDefaultInstance().getClientId();
          onChanged();
          return this;
        }

        private int deterministicMode_ = 0;
        /**
         * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
         * @return Whether the deterministicMode field is set.
         */
        @java.lang.Override public boolean hasDeterministicMode() {
          return ((bitField0_ & 0x00000002) != 0);
        }
        /**
         * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
         * @return The enum numeric value on the wire for deterministicMode.
         */
        @java.lang.Override public int getDeterministicModeValue() {
          return deterministicMode_;
        }
        /**
         * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
         * @param value The enum numeric value on the wire for deterministicMode to set.
         * @return This builder for chaining.
         */
        public Builder setDeterministicModeValue(int value) {
          deterministicMode_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
         * @return The deterministicMode.
         */
        @java.lang.Override
        public tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode getDeterministicMode() {
          tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode result = tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode.forNumber(deterministicMode_);
          return result == null ? tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode.UNRECOGNIZED : result;
        }
        /**
         * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
         * @param value The deterministicMode to set.
         * @return This builder for chaining.
         */
        public Builder setDeterministicMode(tensorflow.serving.Predict.PredictRequest.RequestOptions.DeterministicMode value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000002;
          deterministicMode_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional .tensorflow.serving.PredictRequest.RequestOptions.DeterministicMode deterministic_mode = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearDeterministicMode() {
          bitField0_ = (bitField0_ & ~0x00000002);
          deterministicMode_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:tensorflow.serving.PredictRequest.RequestOptions)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.serving.PredictRequest.RequestOptions)
      private static final tensorflow.serving.Predict.PredictRequest.RequestOptions DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.serving.Predict.PredictRequest.RequestOptions();
      }

      public static tensorflow.serving.Predict.PredictRequest.RequestOptions getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<RequestOptions>
          PARSER = new com.google.protobuf.AbstractParser<RequestOptions>() {
        @java.lang.Override
        public RequestOptions parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<RequestOptions> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<RequestOptions> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictRequest.RequestOptions getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int MODEL_SPEC_FIELD_NUMBER = 1;
    private tensorflow.serving.Model.ModelSpec modelSpec_;
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return Whether the modelSpec field is set.
     */
    @java.lang.Override
    public boolean hasModelSpec() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     * @return The modelSpec.
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpec getModelSpec() {
      return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
    }
    /**
     * <pre>
     * Model Specification. If version is not specified, will use the latest
     * (numerical) version.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
      return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
    }

    public static final int INPUTS_FIELD_NUMBER = 2;
    private static final class InputsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.tensorflow.framework.TensorProto> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.tensorflow.framework.TensorProto>newDefaultInstance(
                  tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_InputsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.tensorflow.framework.TensorProto.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, org.tensorflow.framework.TensorProto> inputs_;
    private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.TensorProto>
    internalGetInputs() {
      if (inputs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InputsDefaultEntryHolder.defaultEntry);
      }
      return inputs_;
    }
    public int getInputsCount() {
      return internalGetInputs().getMap().size();
    }
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    @java.lang.Override
    public boolean containsInputs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetInputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInputsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getInputs() {
      return getInputsMap();
    }
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getInputsMap() {
      return internalGetInputs().getMap();
    }
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    @java.lang.Override
    public /* nullable */
org.tensorflow.framework.TensorProto getInputsOrDefault(
        java.lang.String key,
        /* nullable */
org.tensorflow.framework.TensorProto defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
          internalGetInputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Input tensors.
     * Names of input tensor are alias names. The mapping from aliases to real
     * input tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'inputs' field.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
     */
    @java.lang.Override
    public org.tensorflow.framework.TensorProto getInputsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
          internalGetInputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int OUTPUT_FILTER_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList outputFilter_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @return A list containing the outputFilter.
     */
    public com.google.protobuf.ProtocolStringList
        getOutputFilterList() {
      return outputFilter_;
    }
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @return The count of outputFilter.
     */
    public int getOutputFilterCount() {
      return outputFilter_.size();
    }
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @param index The index of the element to return.
     * @return The outputFilter at the given index.
     */
    public java.lang.String getOutputFilter(int index) {
      return outputFilter_.get(index);
    }
    /**
     * <pre>
     * Output filter.
     * Names specified are alias names. The mapping from aliases to real output
     * tensor names is stored in the SavedModel export as a prediction
     * SignatureDef under the 'outputs' field.
     * Only tensors specified here will be run/fetched and returned, with the
     * exception that when none is specified, all tensors specified in the
     * named signature will be run/fetched and returned.
     * </pre>
     *
     * <code>repeated string output_filter = 3;</code>
     * @param index The index of the value to return.
     * @return The bytes of the outputFilter at the given index.
     */
    public com.google.protobuf.ByteString
        getOutputFilterBytes(int index) {
      return outputFilter_.getByteString(index);
    }

    public static final int PREDICT_STREAMED_OPTIONS_FIELD_NUMBER = 5;
    private tensorflow.serving.Predict.PredictStreamedOptions predictStreamedOptions_;
    /**
     * <pre>
     * Options for streaming requests to control how multiple requests/responses
     * are handled within a single stream.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
     * @return Whether the predictStreamedOptions field is set.
     */
    @java.lang.Override
    public boolean hasPredictStreamedOptions() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * Options for streaming requests to control how multiple requests/responses
     * are handled within a single stream.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
     * @return The predictStreamedOptions.
     */
    @java.lang.Override
    public tensorflow.serving.Predict.PredictStreamedOptions getPredictStreamedOptions() {
      return predictStreamedOptions_ == null ? tensorflow.serving.Predict.PredictStreamedOptions.getDefaultInstance() : predictStreamedOptions_;
    }
    /**
     * <pre>
     * Options for streaming requests to control how multiple requests/responses
     * are handled within a single stream.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Predict.PredictStreamedOptionsOrBuilder getPredictStreamedOptionsOrBuilder() {
      return predictStreamedOptions_ == null ? tensorflow.serving.Predict.PredictStreamedOptions.getDefaultInstance() : predictStreamedOptions_;
    }

    public static final int CLIENT_ID_FIELD_NUMBER = 6;
    private com.google.protobuf.ByteString clientId_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Client identifier to group requests belonging to a specific entity.
     * Example entities can be product ids, service names, user ids etc.
     * Servers can use this to optimize placement, caching and colocation.
     * TODO(b/329897437): Migrate to client_id in RequestOptions.
     * </pre>
     *
     * <code>optional bytes client_id = 6;</code>
     * @return Whether the clientId field is set.
     */
    @java.lang.Override
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * Client identifier to group requests belonging to a specific entity.
     * Example entities can be product ids, service names, user ids etc.
     * Servers can use this to optimize placement, caching and colocation.
     * TODO(b/329897437): Migrate to client_id in RequestOptions.
     * </pre>
     *
     * <code>optional bytes client_id = 6;</code>
     * @return The clientId.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getClientId() {
      return clientId_;
    }

    public static final int REQUEST_OPTIONS_FIELD_NUMBER = 7;
    private tensorflow.serving.Predict.PredictRequest.RequestOptions requestOptions_;
    /**
     * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
     * @return Whether the requestOptions field is set.
     */
    @java.lang.Override
    public boolean hasRequestOptions() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
     * @return The requestOptions.
     */
    @java.lang.Override
    public tensorflow.serving.Predict.PredictRequest.RequestOptions getRequestOptions() {
      return requestOptions_ == null ? tensorflow.serving.Predict.PredictRequest.RequestOptions.getDefaultInstance() : requestOptions_;
    }
    /**
     * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Predict.PredictRequest.RequestOptionsOrBuilder getRequestOptionsOrBuilder() {
      return requestOptions_ == null ? tensorflow.serving.Predict.PredictRequest.RequestOptions.getDefaultInstance() : requestOptions_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getModelSpec());
      }
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetInputs(),
          InputsDefaultEntryHolder.defaultEntry,
          2);
      for (int i = 0; i < outputFilter_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, outputFilter_.getRaw(i));
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(5, getPredictStreamedOptions());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBytes(6, clientId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(7, getRequestOptions());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getModelSpec());
      }
      for (java.util.Map.Entry<java.lang.String, org.tensorflow.framework.TensorProto> entry
           : internalGetInputs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto>
        inputs__ = InputsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, inputs__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outputFilter_.size(); i++) {
          dataSize += computeStringSizeNoTag(outputFilter_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getOutputFilterList().size();
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getPredictStreamedOptions());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, clientId_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getRequestOptions());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Predict.PredictRequest)) {
        return super.equals(obj);
      }
      tensorflow.serving.Predict.PredictRequest other = (tensorflow.serving.Predict.PredictRequest) obj;

      if (hasModelSpec() != other.hasModelSpec()) return false;
      if (hasModelSpec()) {
        if (!getModelSpec()
            .equals(other.getModelSpec())) return false;
      }
      if (!internalGetInputs().equals(
          other.internalGetInputs())) return false;
      if (!getOutputFilterList()
          .equals(other.getOutputFilterList())) return false;
      if (hasPredictStreamedOptions() != other.hasPredictStreamedOptions()) return false;
      if (hasPredictStreamedOptions()) {
        if (!getPredictStreamedOptions()
            .equals(other.getPredictStreamedOptions())) return false;
      }
      if (hasClientId() != other.hasClientId()) return false;
      if (hasClientId()) {
        if (!getClientId()
            .equals(other.getClientId())) return false;
      }
      if (hasRequestOptions() != other.hasRequestOptions()) return false;
      if (hasRequestOptions()) {
        if (!getRequestOptions()
            .equals(other.getRequestOptions())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasModelSpec()) {
        hash = (37 * hash) + MODEL_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getModelSpec().hashCode();
      }
      if (!internalGetInputs().getMap().isEmpty()) {
        hash = (37 * hash) + INPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetInputs().hashCode();
      }
      if (getOutputFilterCount() > 0) {
        hash = (37 * hash) + OUTPUT_FILTER_FIELD_NUMBER;
        hash = (53 * hash) + getOutputFilterList().hashCode();
      }
      if (hasPredictStreamedOptions()) {
        hash = (37 * hash) + PREDICT_STREAMED_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getPredictStreamedOptions().hashCode();
      }
      if (hasClientId()) {
        hash = (37 * hash) + CLIENT_ID_FIELD_NUMBER;
        hash = (53 * hash) + getClientId().hashCode();
      }
      if (hasRequestOptions()) {
        hash = (37 * hash) + REQUEST_OPTIONS_FIELD_NUMBER;
        hash = (53 * hash) + getRequestOptions().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static tensorflow.serving.Predict.PredictRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static tensorflow.serving.Predict.PredictRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Predict.PredictRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * PredictRequest specifies which TensorFlow model to run, as well as
     * how inputs are mapped to tensors and how outputs are filtered before
     * returning to user.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.PredictRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.PredictRequest)
        tensorflow.serving.Predict.PredictRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 2:
            return internalGetInputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableInputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Predict.PredictRequest.class, tensorflow.serving.Predict.PredictRequest.Builder.class);
      }

      // Construct using tensorflow.serving.Predict.PredictRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getModelSpecFieldBuilder();
          getPredictStreamedOptionsFieldBuilder();
          getRequestOptionsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        modelSpec_ = null;
        if (modelSpecBuilder_ != null) {
          modelSpecBuilder_.dispose();
          modelSpecBuilder_ = null;
        }
        internalGetMutableInputs().clear();
        outputFilter_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        predictStreamedOptions_ = null;
        if (predictStreamedOptionsBuilder_ != null) {
          predictStreamedOptionsBuilder_.dispose();
          predictStreamedOptionsBuilder_ = null;
        }
        clientId_ = com.google.protobuf.ByteString.EMPTY;
        requestOptions_ = null;
        if (requestOptionsBuilder_ != null) {
          requestOptionsBuilder_.dispose();
          requestOptionsBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictRequest_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictRequest getDefaultInstanceForType() {
        return tensorflow.serving.Predict.PredictRequest.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictRequest build() {
        tensorflow.serving.Predict.PredictRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictRequest buildPartial() {
        tensorflow.serving.Predict.PredictRequest result = new tensorflow.serving.Predict.PredictRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(tensorflow.serving.Predict.PredictRequest result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.modelSpec_ = modelSpecBuilder_ == null
              ? modelSpec_
              : modelSpecBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.inputs_ = internalGetInputs().build(InputsDefaultEntryHolder.defaultEntry);
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          outputFilter_.makeImmutable();
          result.outputFilter_ = outputFilter_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.predictStreamedOptions_ = predictStreamedOptionsBuilder_ == null
              ? predictStreamedOptions_
              : predictStreamedOptionsBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.clientId_ = clientId_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.requestOptions_ = requestOptionsBuilder_ == null
              ? requestOptions_
              : requestOptionsBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Predict.PredictRequest) {
          return mergeFrom((tensorflow.serving.Predict.PredictRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Predict.PredictRequest other) {
        if (other == tensorflow.serving.Predict.PredictRequest.getDefaultInstance()) return this;
        if (other.hasModelSpec()) {
          mergeModelSpec(other.getModelSpec());
        }
        internalGetMutableInputs().mergeFrom(
            other.internalGetInputs());
        bitField0_ |= 0x00000002;
        if (!other.outputFilter_.isEmpty()) {
          if (outputFilter_.isEmpty()) {
            outputFilter_ = other.outputFilter_;
            bitField0_ |= 0x00000004;
          } else {
            ensureOutputFilterIsMutable();
            outputFilter_.addAll(other.outputFilter_);
          }
          onChanged();
        }
        if (other.hasPredictStreamedOptions()) {
          mergePredictStreamedOptions(other.getPredictStreamedOptions());
        }
        if (other.hasClientId()) {
          setClientId(other.getClientId());
        }
        if (other.hasRequestOptions()) {
          mergeRequestOptions(other.getRequestOptions());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getModelSpecFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto>
                inputs__ = input.readMessage(
                    InputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableInputs().ensureBuilderMap().put(
                    inputs__.getKey(), inputs__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureOutputFilterIsMutable();
                outputFilter_.add(s);
                break;
              } // case 26
              case 42: {
                input.readMessage(
                    getPredictStreamedOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 42
              case 50: {
                clientId_ = input.readBytes();
                bitField0_ |= 0x00000010;
                break;
              } // case 50
              case 58: {
                input.readMessage(
                    getRequestOptionsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private tensorflow.serving.Model.ModelSpec modelSpec_;
      private com.google.protobuf.SingleFieldBuilder<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> modelSpecBuilder_;
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       * @return Whether the modelSpec field is set.
       */
      public boolean hasModelSpec() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       * @return The modelSpec.
       */
      public tensorflow.serving.Model.ModelSpec getModelSpec() {
        if (modelSpecBuilder_ == null) {
          return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        } else {
          return modelSpecBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder setModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelSpec_ = value;
        } else {
          modelSpecBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder setModelSpec(
          tensorflow.serving.Model.ModelSpec.Builder builderForValue) {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = builderForValue.build();
        } else {
          modelSpecBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder mergeModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            modelSpec_ != null &&
            modelSpec_ != tensorflow.serving.Model.ModelSpec.getDefaultInstance()) {
            getModelSpecBuilder().mergeFrom(value);
          } else {
            modelSpec_ = value;
          }
        } else {
          modelSpecBuilder_.mergeFrom(value);
        }
        if (modelSpec_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public Builder clearModelSpec() {
        bitField0_ = (bitField0_ & ~0x00000001);
        modelSpec_ = null;
        if (modelSpecBuilder_ != null) {
          modelSpecBuilder_.dispose();
          modelSpecBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public tensorflow.serving.Model.ModelSpec.Builder getModelSpecBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getModelSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
        if (modelSpecBuilder_ != null) {
          return modelSpecBuilder_.getMessageOrBuilder();
        } else {
          return modelSpec_ == null ?
              tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        }
      }
      /**
       * <pre>
       * Model Specification. If version is not specified, will use the latest
       * (numerical) version.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> 
          getModelSpecFieldBuilder() {
        if (modelSpecBuilder_ == null) {
          modelSpecBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder>(
                  getModelSpec(),
                  getParentForChildren(),
                  isClean());
          modelSpec_ = null;
        }
        return modelSpecBuilder_;
      }

      private static final class InputsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder, org.tensorflow.framework.TensorProto> {
        @java.lang.Override
        public org.tensorflow.framework.TensorProto build(org.tensorflow.framework.TensorProtoOrBuilder val) {
          if (val instanceof org.tensorflow.framework.TensorProto) { return (org.tensorflow.framework.TensorProto) val; }
          return ((org.tensorflow.framework.TensorProto.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto> defaultEntry() {
          return InputsDefaultEntryHolder.defaultEntry;
        }
      };
      private static final InputsConverter inputsConverter = new InputsConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder, org.tensorflow.framework.TensorProto, org.tensorflow.framework.TensorProto.Builder> inputs_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder, org.tensorflow.framework.TensorProto, org.tensorflow.framework.TensorProto.Builder>
          internalGetInputs() {
        if (inputs_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(inputsConverter);
        }
        return inputs_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder, org.tensorflow.framework.TensorProto, org.tensorflow.framework.TensorProto.Builder>
          internalGetMutableInputs() {
        if (inputs_ == null) {
          inputs_ = new com.google.protobuf.MapFieldBuilder<>(inputsConverter);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return inputs_;
      }
      public int getInputsCount() {
        return internalGetInputs().ensureBuilderMap().size();
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      @java.lang.Override
      public boolean containsInputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetInputs().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getInputsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getInputs() {
        return getInputsMap();
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getInputsMap() {
        return internalGetInputs().getImmutableMap();
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      @java.lang.Override
      public /* nullable */
org.tensorflow.framework.TensorProto getInputsOrDefault(
          java.lang.String key,
          /* nullable */
org.tensorflow.framework.TensorProto defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder> map = internalGetMutableInputs().ensureBuilderMap();
        return map.containsKey(key) ? inputsConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      @java.lang.Override
      public org.tensorflow.framework.TensorProto getInputsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder> map = internalGetMutableInputs().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return inputsConverter.build(map.get(key));
      }
      public Builder clearInputs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableInputs().clear();
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      public Builder removeInputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableInputs().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
          getMutableInputs() {
        bitField0_ |= 0x00000002;
        return internalGetMutableInputs().ensureMessageMap();
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      public Builder putInputs(
          java.lang.String key,
          org.tensorflow.framework.TensorProto value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableInputs().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      public Builder putAllInputs(
          java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> values) {
        for (java.util.Map.Entry<java.lang.String, org.tensorflow.framework.TensorProto> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutableInputs().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Input tensors.
       * Names of input tensor are alias names. The mapping from aliases to real
       * input tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'inputs' field.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; inputs = 2;</code>
       */
      public org.tensorflow.framework.TensorProto.Builder putInputsBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder> builderMap = internalGetMutableInputs().ensureBuilderMap();
        org.tensorflow.framework.TensorProtoOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = org.tensorflow.framework.TensorProto.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof org.tensorflow.framework.TensorProto) {
          entry = ((org.tensorflow.framework.TensorProto) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (org.tensorflow.framework.TensorProto.Builder) entry;
      }

      private com.google.protobuf.LazyStringArrayList outputFilter_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureOutputFilterIsMutable() {
        if (!outputFilter_.isModifiable()) {
          outputFilter_ = new com.google.protobuf.LazyStringArrayList(outputFilter_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @return A list containing the outputFilter.
       */
      public com.google.protobuf.ProtocolStringList
          getOutputFilterList() {
        outputFilter_.makeImmutable();
        return outputFilter_;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @return The count of outputFilter.
       */
      public int getOutputFilterCount() {
        return outputFilter_.size();
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param index The index of the element to return.
       * @return The outputFilter at the given index.
       */
      public java.lang.String getOutputFilter(int index) {
        return outputFilter_.get(index);
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param index The index of the value to return.
       * @return The bytes of the outputFilter at the given index.
       */
      public com.google.protobuf.ByteString
          getOutputFilterBytes(int index) {
        return outputFilter_.getByteString(index);
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param index The index to set the value at.
       * @param value The outputFilter to set.
       * @return This builder for chaining.
       */
      public Builder setOutputFilter(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureOutputFilterIsMutable();
        outputFilter_.set(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param value The outputFilter to add.
       * @return This builder for chaining.
       */
      public Builder addOutputFilter(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureOutputFilterIsMutable();
        outputFilter_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param values The outputFilter to add.
       * @return This builder for chaining.
       */
      public Builder addAllOutputFilter(
          java.lang.Iterable<java.lang.String> values) {
        ensureOutputFilterIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, outputFilter_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOutputFilter() {
        outputFilter_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Output filter.
       * Names specified are alias names. The mapping from aliases to real output
       * tensor names is stored in the SavedModel export as a prediction
       * SignatureDef under the 'outputs' field.
       * Only tensors specified here will be run/fetched and returned, with the
       * exception that when none is specified, all tensors specified in the
       * named signature will be run/fetched and returned.
       * </pre>
       *
       * <code>repeated string output_filter = 3;</code>
       * @param value The bytes of the outputFilter to add.
       * @return This builder for chaining.
       */
      public Builder addOutputFilterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureOutputFilterIsMutable();
        outputFilter_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      private tensorflow.serving.Predict.PredictStreamedOptions predictStreamedOptions_;
      private com.google.protobuf.SingleFieldBuilder<
          tensorflow.serving.Predict.PredictStreamedOptions, tensorflow.serving.Predict.PredictStreamedOptions.Builder, tensorflow.serving.Predict.PredictStreamedOptionsOrBuilder> predictStreamedOptionsBuilder_;
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       * @return Whether the predictStreamedOptions field is set.
       */
      public boolean hasPredictStreamedOptions() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       * @return The predictStreamedOptions.
       */
      public tensorflow.serving.Predict.PredictStreamedOptions getPredictStreamedOptions() {
        if (predictStreamedOptionsBuilder_ == null) {
          return predictStreamedOptions_ == null ? tensorflow.serving.Predict.PredictStreamedOptions.getDefaultInstance() : predictStreamedOptions_;
        } else {
          return predictStreamedOptionsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       */
      public Builder setPredictStreamedOptions(tensorflow.serving.Predict.PredictStreamedOptions value) {
        if (predictStreamedOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          predictStreamedOptions_ = value;
        } else {
          predictStreamedOptionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       */
      public Builder setPredictStreamedOptions(
          tensorflow.serving.Predict.PredictStreamedOptions.Builder builderForValue) {
        if (predictStreamedOptionsBuilder_ == null) {
          predictStreamedOptions_ = builderForValue.build();
        } else {
          predictStreamedOptionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       */
      public Builder mergePredictStreamedOptions(tensorflow.serving.Predict.PredictStreamedOptions value) {
        if (predictStreamedOptionsBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            predictStreamedOptions_ != null &&
            predictStreamedOptions_ != tensorflow.serving.Predict.PredictStreamedOptions.getDefaultInstance()) {
            getPredictStreamedOptionsBuilder().mergeFrom(value);
          } else {
            predictStreamedOptions_ = value;
          }
        } else {
          predictStreamedOptionsBuilder_.mergeFrom(value);
        }
        if (predictStreamedOptions_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       */
      public Builder clearPredictStreamedOptions() {
        bitField0_ = (bitField0_ & ~0x00000008);
        predictStreamedOptions_ = null;
        if (predictStreamedOptionsBuilder_ != null) {
          predictStreamedOptionsBuilder_.dispose();
          predictStreamedOptionsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       */
      public tensorflow.serving.Predict.PredictStreamedOptions.Builder getPredictStreamedOptionsBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getPredictStreamedOptionsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       */
      public tensorflow.serving.Predict.PredictStreamedOptionsOrBuilder getPredictStreamedOptionsOrBuilder() {
        if (predictStreamedOptionsBuilder_ != null) {
          return predictStreamedOptionsBuilder_.getMessageOrBuilder();
        } else {
          return predictStreamedOptions_ == null ?
              tensorflow.serving.Predict.PredictStreamedOptions.getDefaultInstance() : predictStreamedOptions_;
        }
      }
      /**
       * <pre>
       * Options for streaming requests to control how multiple requests/responses
       * are handled within a single stream.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions predict_streamed_options = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          tensorflow.serving.Predict.PredictStreamedOptions, tensorflow.serving.Predict.PredictStreamedOptions.Builder, tensorflow.serving.Predict.PredictStreamedOptionsOrBuilder> 
          getPredictStreamedOptionsFieldBuilder() {
        if (predictStreamedOptionsBuilder_ == null) {
          predictStreamedOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tensorflow.serving.Predict.PredictStreamedOptions, tensorflow.serving.Predict.PredictStreamedOptions.Builder, tensorflow.serving.Predict.PredictStreamedOptionsOrBuilder>(
                  getPredictStreamedOptions(),
                  getParentForChildren(),
                  isClean());
          predictStreamedOptions_ = null;
        }
        return predictStreamedOptionsBuilder_;
      }

      private com.google.protobuf.ByteString clientId_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Client identifier to group requests belonging to a specific entity.
       * Example entities can be product ids, service names, user ids etc.
       * Servers can use this to optimize placement, caching and colocation.
       * TODO(b/329897437): Migrate to client_id in RequestOptions.
       * </pre>
       *
       * <code>optional bytes client_id = 6;</code>
       * @return Whether the clientId field is set.
       */
      @java.lang.Override
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * Client identifier to group requests belonging to a specific entity.
       * Example entities can be product ids, service names, user ids etc.
       * Servers can use this to optimize placement, caching and colocation.
       * TODO(b/329897437): Migrate to client_id in RequestOptions.
       * </pre>
       *
       * <code>optional bytes client_id = 6;</code>
       * @return The clientId.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getClientId() {
        return clientId_;
      }
      /**
       * <pre>
       * Client identifier to group requests belonging to a specific entity.
       * Example entities can be product ids, service names, user ids etc.
       * Servers can use this to optimize placement, caching and colocation.
       * TODO(b/329897437): Migrate to client_id in RequestOptions.
       * </pre>
       *
       * <code>optional bytes client_id = 6;</code>
       * @param value The clientId to set.
       * @return This builder for chaining.
       */
      public Builder setClientId(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        clientId_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Client identifier to group requests belonging to a specific entity.
       * Example entities can be product ids, service names, user ids etc.
       * Servers can use this to optimize placement, caching and colocation.
       * TODO(b/329897437): Migrate to client_id in RequestOptions.
       * </pre>
       *
       * <code>optional bytes client_id = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000010);
        clientId_ = getDefaultInstance().getClientId();
        onChanged();
        return this;
      }

      private tensorflow.serving.Predict.PredictRequest.RequestOptions requestOptions_;
      private com.google.protobuf.SingleFieldBuilder<
          tensorflow.serving.Predict.PredictRequest.RequestOptions, tensorflow.serving.Predict.PredictRequest.RequestOptions.Builder, tensorflow.serving.Predict.PredictRequest.RequestOptionsOrBuilder> requestOptionsBuilder_;
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       * @return Whether the requestOptions field is set.
       */
      public boolean hasRequestOptions() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       * @return The requestOptions.
       */
      public tensorflow.serving.Predict.PredictRequest.RequestOptions getRequestOptions() {
        if (requestOptionsBuilder_ == null) {
          return requestOptions_ == null ? tensorflow.serving.Predict.PredictRequest.RequestOptions.getDefaultInstance() : requestOptions_;
        } else {
          return requestOptionsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       */
      public Builder setRequestOptions(tensorflow.serving.Predict.PredictRequest.RequestOptions value) {
        if (requestOptionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          requestOptions_ = value;
        } else {
          requestOptionsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       */
      public Builder setRequestOptions(
          tensorflow.serving.Predict.PredictRequest.RequestOptions.Builder builderForValue) {
        if (requestOptionsBuilder_ == null) {
          requestOptions_ = builderForValue.build();
        } else {
          requestOptionsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       */
      public Builder mergeRequestOptions(tensorflow.serving.Predict.PredictRequest.RequestOptions value) {
        if (requestOptionsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            requestOptions_ != null &&
            requestOptions_ != tensorflow.serving.Predict.PredictRequest.RequestOptions.getDefaultInstance()) {
            getRequestOptionsBuilder().mergeFrom(value);
          } else {
            requestOptions_ = value;
          }
        } else {
          requestOptionsBuilder_.mergeFrom(value);
        }
        if (requestOptions_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       */
      public Builder clearRequestOptions() {
        bitField0_ = (bitField0_ & ~0x00000020);
        requestOptions_ = null;
        if (requestOptionsBuilder_ != null) {
          requestOptionsBuilder_.dispose();
          requestOptionsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       */
      public tensorflow.serving.Predict.PredictRequest.RequestOptions.Builder getRequestOptionsBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getRequestOptionsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       */
      public tensorflow.serving.Predict.PredictRequest.RequestOptionsOrBuilder getRequestOptionsOrBuilder() {
        if (requestOptionsBuilder_ != null) {
          return requestOptionsBuilder_.getMessageOrBuilder();
        } else {
          return requestOptions_ == null ?
              tensorflow.serving.Predict.PredictRequest.RequestOptions.getDefaultInstance() : requestOptions_;
        }
      }
      /**
       * <code>optional .tensorflow.serving.PredictRequest.RequestOptions request_options = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          tensorflow.serving.Predict.PredictRequest.RequestOptions, tensorflow.serving.Predict.PredictRequest.RequestOptions.Builder, tensorflow.serving.Predict.PredictRequest.RequestOptionsOrBuilder> 
          getRequestOptionsFieldBuilder() {
        if (requestOptionsBuilder_ == null) {
          requestOptionsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tensorflow.serving.Predict.PredictRequest.RequestOptions, tensorflow.serving.Predict.PredictRequest.RequestOptions.Builder, tensorflow.serving.Predict.PredictRequest.RequestOptionsOrBuilder>(
                  getRequestOptions(),
                  getParentForChildren(),
                  isClean());
          requestOptions_ = null;
        }
        return requestOptionsBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:tensorflow.serving.PredictRequest)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.PredictRequest)
    private static final tensorflow.serving.Predict.PredictRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Predict.PredictRequest();
    }

    public static tensorflow.serving.Predict.PredictRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PredictRequest>
        PARSER = new com.google.protobuf.AbstractParser<PredictRequest>() {
      @java.lang.Override
      public PredictRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PredictRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PredictRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Predict.PredictRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PredictStreamedOptionsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.PredictStreamedOptions)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Request state used to handle segmentation of requests.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
     * @return The enum numeric value on the wire for requestState.
     */
    int getRequestStateValue();
    /**
     * <pre>
     * Request state used to handle segmentation of requests.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
     * @return The requestState.
     */
    tensorflow.serving.Predict.PredictStreamedOptions.RequestState getRequestState();

    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    int getSplitDimensionsCount();
    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    boolean containsSplitDimensions(
        java.lang.String key);
    /**
     * Use {@link #getSplitDimensionsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.Integer>
    getSplitDimensions();
    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.Integer>
    getSplitDimensionsMap();
    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    int getSplitDimensionsOrDefault(
        java.lang.String key,
        int defaultValue);
    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    int getSplitDimensionsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Options only used for streaming requests that control how inputs/ouputs are
   * handled in the stream.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.PredictStreamedOptions}
   */
  public static final class PredictStreamedOptions extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.PredictStreamedOptions)
      PredictStreamedOptionsOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "-rc3",
        PredictStreamedOptions.class.getName());
    }
    // Use PredictStreamedOptions.newBuilder() to construct.
    private PredictStreamedOptions(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PredictStreamedOptions() {
      requestState_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictStreamedOptions_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 2:
          return internalGetSplitDimensions();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictStreamedOptions_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Predict.PredictStreamedOptions.class, tensorflow.serving.Predict.PredictStreamedOptions.Builder.class);
    }

    /**
     * Protobuf enum {@code tensorflow.serving.PredictStreamedOptions.RequestState}
     */
    public enum RequestState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NONE = 0;</code>
       */
      NONE(0),
      /**
       * <code>SPLIT = 1;</code>
       */
      SPLIT(1),
      /**
       * <code>END_SPLIT = 2;</code>
       */
      END_SPLIT(2),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 0,
          /* suffix= */ "-rc3",
          RequestState.class.getName());
      }
      /**
       * <code>NONE = 0;</code>
       */
      public static final int NONE_VALUE = 0;
      /**
       * <code>SPLIT = 1;</code>
       */
      public static final int SPLIT_VALUE = 1;
      /**
       * <code>END_SPLIT = 2;</code>
       */
      public static final int END_SPLIT_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static RequestState valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static RequestState forNumber(int value) {
        switch (value) {
          case 0: return NONE;
          case 1: return SPLIT;
          case 2: return END_SPLIT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<RequestState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          RequestState> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<RequestState>() {
              public RequestState findValueByNumber(int number) {
                return RequestState.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return tensorflow.serving.Predict.PredictStreamedOptions.getDescriptor().getEnumTypes().get(0);
      }

      private static final RequestState[] VALUES = values();

      public static RequestState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private RequestState(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:tensorflow.serving.PredictStreamedOptions.RequestState)
    }

    public static final int REQUEST_STATE_FIELD_NUMBER = 1;
    private int requestState_ = 0;
    /**
     * <pre>
     * Request state used to handle segmentation of requests.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
     * @return The enum numeric value on the wire for requestState.
     */
    @java.lang.Override public int getRequestStateValue() {
      return requestState_;
    }
    /**
     * <pre>
     * Request state used to handle segmentation of requests.
     * </pre>
     *
     * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
     * @return The requestState.
     */
    @java.lang.Override public tensorflow.serving.Predict.PredictStreamedOptions.RequestState getRequestState() {
      tensorflow.serving.Predict.PredictStreamedOptions.RequestState result = tensorflow.serving.Predict.PredictStreamedOptions.RequestState.forNumber(requestState_);
      return result == null ? tensorflow.serving.Predict.PredictStreamedOptions.RequestState.UNRECOGNIZED : result;
    }

    public static final int SPLIT_DIMENSIONS_FIELD_NUMBER = 2;
    private static final class SplitDimensionsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.Integer>newDefaultInstance(
                  tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictStreamedOptions_SplitDimensionsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.INT32,
                  0);
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.Integer> splitDimensions_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
    internalGetSplitDimensions() {
      if (splitDimensions_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SplitDimensionsDefaultEntryHolder.defaultEntry);
      }
      return splitDimensions_;
    }
    public int getSplitDimensionsCount() {
      return internalGetSplitDimensions().getMap().size();
    }
    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    @java.lang.Override
    public boolean containsSplitDimensions(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetSplitDimensions().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSplitDimensionsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.Integer> getSplitDimensions() {
      return getSplitDimensionsMap();
    }
    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, java.lang.Integer> getSplitDimensionsMap() {
      return internalGetSplitDimensions().getMap();
    }
    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    @java.lang.Override
    public int getSplitDimensionsOrDefault(
        java.lang.String key,
        int defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetSplitDimensions().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Input tensors split dimensions.
     * Defines the dimension used to split input tensors specified
     * in PredictRequest.inputs. The dimension will be used
     * for concatenation of multiple SPLIT requests.
     *
     * For input tensor in PredictRequest.inputs that are not contained in this
     * map, the tensors from the first SPLIT request will be used.
     *
     * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
     *
     * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
     * be [5, 6, 7, 8].
     *
     * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
     * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
     * be [[3, 4], [7, 8]].
     * </pre>
     *
     * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
     */
    @java.lang.Override
    public int getSplitDimensionsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, java.lang.Integer> map =
          internalGetSplitDimensions().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (requestState_ != tensorflow.serving.Predict.PredictStreamedOptions.RequestState.NONE.getNumber()) {
        output.writeEnum(1, requestState_);
      }
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetSplitDimensions(),
          SplitDimensionsDefaultEntryHolder.defaultEntry,
          2);
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (requestState_ != tensorflow.serving.Predict.PredictStreamedOptions.RequestState.NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, requestState_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.Integer> entry
           : internalGetSplitDimensions().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
        splitDimensions__ = SplitDimensionsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, splitDimensions__);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Predict.PredictStreamedOptions)) {
        return super.equals(obj);
      }
      tensorflow.serving.Predict.PredictStreamedOptions other = (tensorflow.serving.Predict.PredictStreamedOptions) obj;

      if (requestState_ != other.requestState_) return false;
      if (!internalGetSplitDimensions().equals(
          other.internalGetSplitDimensions())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + REQUEST_STATE_FIELD_NUMBER;
      hash = (53 * hash) + requestState_;
      if (!internalGetSplitDimensions().getMap().isEmpty()) {
        hash = (37 * hash) + SPLIT_DIMENSIONS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSplitDimensions().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static tensorflow.serving.Predict.PredictStreamedOptions parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static tensorflow.serving.Predict.PredictStreamedOptions parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictStreamedOptions parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Predict.PredictStreamedOptions prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Options only used for streaming requests that control how inputs/ouputs are
     * handled in the stream.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.PredictStreamedOptions}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.PredictStreamedOptions)
        tensorflow.serving.Predict.PredictStreamedOptionsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictStreamedOptions_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 2:
            return internalGetSplitDimensions();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableSplitDimensions();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictStreamedOptions_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Predict.PredictStreamedOptions.class, tensorflow.serving.Predict.PredictStreamedOptions.Builder.class);
      }

      // Construct using tensorflow.serving.Predict.PredictStreamedOptions.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        requestState_ = 0;
        internalGetMutableSplitDimensions().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictStreamedOptions_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictStreamedOptions getDefaultInstanceForType() {
        return tensorflow.serving.Predict.PredictStreamedOptions.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictStreamedOptions build() {
        tensorflow.serving.Predict.PredictStreamedOptions result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictStreamedOptions buildPartial() {
        tensorflow.serving.Predict.PredictStreamedOptions result = new tensorflow.serving.Predict.PredictStreamedOptions(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(tensorflow.serving.Predict.PredictStreamedOptions result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.requestState_ = requestState_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.splitDimensions_ = internalGetSplitDimensions();
          result.splitDimensions_.makeImmutable();
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Predict.PredictStreamedOptions) {
          return mergeFrom((tensorflow.serving.Predict.PredictStreamedOptions)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Predict.PredictStreamedOptions other) {
        if (other == tensorflow.serving.Predict.PredictStreamedOptions.getDefaultInstance()) return this;
        if (other.requestState_ != 0) {
          setRequestStateValue(other.getRequestStateValue());
        }
        internalGetMutableSplitDimensions().mergeFrom(
            other.internalGetSplitDimensions());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                requestState_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                com.google.protobuf.MapEntry<java.lang.String, java.lang.Integer>
                splitDimensions__ = input.readMessage(
                    SplitDimensionsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableSplitDimensions().getMutableMap().put(
                    splitDimensions__.getKey(), splitDimensions__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int requestState_ = 0;
      /**
       * <pre>
       * Request state used to handle segmentation of requests.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
       * @return The enum numeric value on the wire for requestState.
       */
      @java.lang.Override public int getRequestStateValue() {
        return requestState_;
      }
      /**
       * <pre>
       * Request state used to handle segmentation of requests.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
       * @param value The enum numeric value on the wire for requestState to set.
       * @return This builder for chaining.
       */
      public Builder setRequestStateValue(int value) {
        requestState_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Request state used to handle segmentation of requests.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
       * @return The requestState.
       */
      @java.lang.Override
      public tensorflow.serving.Predict.PredictStreamedOptions.RequestState getRequestState() {
        tensorflow.serving.Predict.PredictStreamedOptions.RequestState result = tensorflow.serving.Predict.PredictStreamedOptions.RequestState.forNumber(requestState_);
        return result == null ? tensorflow.serving.Predict.PredictStreamedOptions.RequestState.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Request state used to handle segmentation of requests.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
       * @param value The requestState to set.
       * @return This builder for chaining.
       */
      public Builder setRequestState(tensorflow.serving.Predict.PredictStreamedOptions.RequestState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        requestState_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Request state used to handle segmentation of requests.
       * </pre>
       *
       * <code>.tensorflow.serving.PredictStreamedOptions.RequestState request_state = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearRequestState() {
        bitField0_ = (bitField0_ & ~0x00000001);
        requestState_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.Integer> splitDimensions_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
          internalGetSplitDimensions() {
        if (splitDimensions_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SplitDimensionsDefaultEntryHolder.defaultEntry);
        }
        return splitDimensions_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.Integer>
          internalGetMutableSplitDimensions() {
        if (splitDimensions_ == null) {
          splitDimensions_ = com.google.protobuf.MapField.newMapField(
              SplitDimensionsDefaultEntryHolder.defaultEntry);
        }
        if (!splitDimensions_.isMutable()) {
          splitDimensions_ = splitDimensions_.copy();
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return splitDimensions_;
      }
      public int getSplitDimensionsCount() {
        return internalGetSplitDimensions().getMap().size();
      }
      /**
       * <pre>
       * Input tensors split dimensions.
       * Defines the dimension used to split input tensors specified
       * in PredictRequest.inputs. The dimension will be used
       * for concatenation of multiple SPLIT requests.
       *
       * For input tensor in PredictRequest.inputs that are not contained in this
       * map, the tensors from the first SPLIT request will be used.
       *
       * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
       *
       * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
       * be [5, 6, 7, 8].
       *
       * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
       * be [[3, 4], [7, 8]].
       * </pre>
       *
       * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
       */
      @java.lang.Override
      public boolean containsSplitDimensions(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetSplitDimensions().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSplitDimensionsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer> getSplitDimensions() {
        return getSplitDimensionsMap();
      }
      /**
       * <pre>
       * Input tensors split dimensions.
       * Defines the dimension used to split input tensors specified
       * in PredictRequest.inputs. The dimension will be used
       * for concatenation of multiple SPLIT requests.
       *
       * For input tensor in PredictRequest.inputs that are not contained in this
       * map, the tensors from the first SPLIT request will be used.
       *
       * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
       *
       * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
       * be [5, 6, 7, 8].
       *
       * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
       * be [[3, 4], [7, 8]].
       * </pre>
       *
       * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, java.lang.Integer> getSplitDimensionsMap() {
        return internalGetSplitDimensions().getMap();
      }
      /**
       * <pre>
       * Input tensors split dimensions.
       * Defines the dimension used to split input tensors specified
       * in PredictRequest.inputs. The dimension will be used
       * for concatenation of multiple SPLIT requests.
       *
       * For input tensor in PredictRequest.inputs that are not contained in this
       * map, the tensors from the first SPLIT request will be used.
       *
       * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
       *
       * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
       * be [5, 6, 7, 8].
       *
       * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
       * be [[3, 4], [7, 8]].
       * </pre>
       *
       * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
       */
      @java.lang.Override
      public int getSplitDimensionsOrDefault(
          java.lang.String key,
          int defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetSplitDimensions().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Input tensors split dimensions.
       * Defines the dimension used to split input tensors specified
       * in PredictRequest.inputs. The dimension will be used
       * for concatenation of multiple SPLIT requests.
       *
       * For input tensor in PredictRequest.inputs that are not contained in this
       * map, the tensors from the first SPLIT request will be used.
       *
       * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
       *
       * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
       * be [5, 6, 7, 8].
       *
       * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
       * be [[3, 4], [7, 8]].
       * </pre>
       *
       * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
       */
      @java.lang.Override
      public int getSplitDimensionsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, java.lang.Integer> map =
            internalGetSplitDimensions().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }
      public Builder clearSplitDimensions() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableSplitDimensions().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Input tensors split dimensions.
       * Defines the dimension used to split input tensors specified
       * in PredictRequest.inputs. The dimension will be used
       * for concatenation of multiple SPLIT requests.
       *
       * For input tensor in PredictRequest.inputs that are not contained in this
       * map, the tensors from the first SPLIT request will be used.
       *
       * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
       *
       * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
       * be [5, 6, 7, 8].
       *
       * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
       * be [[3, 4], [7, 8]].
       * </pre>
       *
       * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
       */
      public Builder removeSplitDimensions(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableSplitDimensions().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.Integer>
          getMutableSplitDimensions() {
        bitField0_ |= 0x00000002;
        return internalGetMutableSplitDimensions().getMutableMap();
      }
      /**
       * <pre>
       * Input tensors split dimensions.
       * Defines the dimension used to split input tensors specified
       * in PredictRequest.inputs. The dimension will be used
       * for concatenation of multiple SPLIT requests.
       *
       * For input tensor in PredictRequest.inputs that are not contained in this
       * map, the tensors from the first SPLIT request will be used.
       *
       * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
       *
       * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
       * be [5, 6, 7, 8].
       *
       * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
       * be [[3, 4], [7, 8]].
       * </pre>
       *
       * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
       */
      public Builder putSplitDimensions(
          java.lang.String key,
          int value) {
        if (key == null) { throw new NullPointerException("map key"); }

        internalGetMutableSplitDimensions().getMutableMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Input tensors split dimensions.
       * Defines the dimension used to split input tensors specified
       * in PredictRequest.inputs. The dimension will be used
       * for concatenation of multiple SPLIT requests.
       *
       * For input tensor in PredictRequest.inputs that are not contained in this
       * map, the tensors from the first SPLIT request will be used.
       *
       * For example, with an original input tensor of [[1, 2, 3, 4], [5, 6, 7, 8]].
       *
       * For a split dimension of 0 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [1, 2, 3, 4] and request 2 should be
       * be [5, 6, 7, 8].
       *
       * For a split dimension of 1 and two requests (SPLIT and END_SPLIT), the
       * input tensors for request 1 should be [[1, 2], [5, 6]] and request 2 should
       * be [[3, 4], [7, 8]].
       * </pre>
       *
       * <code>map&lt;string, int32&gt; split_dimensions = 2;</code>
       */
      public Builder putAllSplitDimensions(
          java.util.Map<java.lang.String, java.lang.Integer> values) {
        internalGetMutableSplitDimensions().getMutableMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }

      // @@protoc_insertion_point(builder_scope:tensorflow.serving.PredictStreamedOptions)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.PredictStreamedOptions)
    private static final tensorflow.serving.Predict.PredictStreamedOptions DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Predict.PredictStreamedOptions();
    }

    public static tensorflow.serving.Predict.PredictStreamedOptions getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PredictStreamedOptions>
        PARSER = new com.google.protobuf.AbstractParser<PredictStreamedOptions>() {
      @java.lang.Override
      public PredictStreamedOptions parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PredictStreamedOptions> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PredictStreamedOptions> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Predict.PredictStreamedOptions getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface PredictResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.serving.PredictResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     * @return Whether the modelSpec field is set.
     */
    boolean hasModelSpec();
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     * @return The modelSpec.
     */
    tensorflow.serving.Model.ModelSpec getModelSpec();
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     */
    tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder();

    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    int getOutputsCount();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    boolean containsOutputs(
        java.lang.String key);
    /**
     * Use {@link #getOutputsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
    getOutputs();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
    getOutputsMap();
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    /* nullable */
org.tensorflow.framework.TensorProto getOutputsOrDefault(
        java.lang.String key,
        /* nullable */
org.tensorflow.framework.TensorProto defaultValue);
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    org.tensorflow.framework.TensorProto getOutputsOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * Response for PredictRequest on successful run.
   * </pre>
   *
   * Protobuf type {@code tensorflow.serving.PredictResponse}
   */
  public static final class PredictResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:tensorflow.serving.PredictResponse)
      PredictResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 0,
        /* suffix= */ "-rc3",
        PredictResponse.class.getName());
    }
    // Use PredictResponse.newBuilder() to construct.
    private PredictResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private PredictResponse() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
        int number) {
      switch (number) {
        case 1:
          return internalGetOutputs();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.serving.Predict.PredictResponse.class, tensorflow.serving.Predict.PredictResponse.Builder.class);
    }

    private int bitField0_;
    public static final int MODEL_SPEC_FIELD_NUMBER = 2;
    private tensorflow.serving.Model.ModelSpec modelSpec_;
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     * @return Whether the modelSpec field is set.
     */
    @java.lang.Override
    public boolean hasModelSpec() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     * @return The modelSpec.
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpec getModelSpec() {
      return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
    }
    /**
     * <pre>
     * Effective Model Specification used to process PredictRequest.
     * </pre>
     *
     * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
     */
    @java.lang.Override
    public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
      return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
    }

    public static final int OUTPUTS_FIELD_NUMBER = 1;
    private static final class OutputsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, org.tensorflow.framework.TensorProto> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, org.tensorflow.framework.TensorProto>newDefaultInstance(
                  tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_OutputsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  org.tensorflow.framework.TensorProto.getDefaultInstance());
    }
    @SuppressWarnings("serial")
    private com.google.protobuf.MapField<
        java.lang.String, org.tensorflow.framework.TensorProto> outputs_;
    private com.google.protobuf.MapField<java.lang.String, org.tensorflow.framework.TensorProto>
    internalGetOutputs() {
      if (outputs_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            OutputsDefaultEntryHolder.defaultEntry);
      }
      return outputs_;
    }
    public int getOutputsCount() {
      return internalGetOutputs().getMap().size();
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    @java.lang.Override
    public boolean containsOutputs(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      return internalGetOutputs().getMap().containsKey(key);
    }
    /**
     * Use {@link #getOutputsMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getOutputs() {
      return getOutputsMap();
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    @java.lang.Override
    public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getOutputsMap() {
      return internalGetOutputs().getMap();
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    @java.lang.Override
    public /* nullable */
org.tensorflow.framework.TensorProto getOutputsOrDefault(
        java.lang.String key,
        /* nullable */
org.tensorflow.framework.TensorProto defaultValue) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
          internalGetOutputs().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Output tensors.
     * </pre>
     *
     * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
     */
    @java.lang.Override
    public org.tensorflow.framework.TensorProto getOutputsOrThrow(
        java.lang.String key) {
      if (key == null) { throw new NullPointerException("map key"); }
      java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> map =
          internalGetOutputs().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessage
        .serializeStringMapTo(
          output,
          internalGetOutputs(),
          OutputsDefaultEntryHolder.defaultEntry,
          1);
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getModelSpec());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.String, org.tensorflow.framework.TensorProto> entry
           : internalGetOutputs().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto>
        outputs__ = OutputsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, outputs__);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getModelSpec());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.serving.Predict.PredictResponse)) {
        return super.equals(obj);
      }
      tensorflow.serving.Predict.PredictResponse other = (tensorflow.serving.Predict.PredictResponse) obj;

      if (hasModelSpec() != other.hasModelSpec()) return false;
      if (hasModelSpec()) {
        if (!getModelSpec()
            .equals(other.getModelSpec())) return false;
      }
      if (!internalGetOutputs().equals(
          other.internalGetOutputs())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasModelSpec()) {
        hash = (37 * hash) + MODEL_SPEC_FIELD_NUMBER;
        hash = (53 * hash) + getModelSpec().hashCode();
      }
      if (!internalGetOutputs().getMap().isEmpty()) {
        hash = (37 * hash) + OUTPUTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetOutputs().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static tensorflow.serving.Predict.PredictResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static tensorflow.serving.Predict.PredictResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.serving.Predict.PredictResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.serving.Predict.PredictResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Response for PredictRequest on successful run.
     * </pre>
     *
     * Protobuf type {@code tensorflow.serving.PredictResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.serving.PredictResponse)
        tensorflow.serving.Predict.PredictResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetOutputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapFieldReflectionAccessor internalGetMutableMapFieldReflection(
          int number) {
        switch (number) {
          case 1:
            return internalGetMutableOutputs();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.serving.Predict.PredictResponse.class, tensorflow.serving.Predict.PredictResponse.Builder.class);
      }

      // Construct using tensorflow.serving.Predict.PredictResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getModelSpecFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        modelSpec_ = null;
        if (modelSpecBuilder_ != null) {
          modelSpecBuilder_.dispose();
          modelSpecBuilder_ = null;
        }
        internalGetMutableOutputs().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.serving.Predict.internal_static_tensorflow_serving_PredictResponse_descriptor;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictResponse getDefaultInstanceForType() {
        return tensorflow.serving.Predict.PredictResponse.getDefaultInstance();
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictResponse build() {
        tensorflow.serving.Predict.PredictResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public tensorflow.serving.Predict.PredictResponse buildPartial() {
        tensorflow.serving.Predict.PredictResponse result = new tensorflow.serving.Predict.PredictResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(tensorflow.serving.Predict.PredictResponse result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.modelSpec_ = modelSpecBuilder_ == null
              ? modelSpec_
              : modelSpecBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.outputs_ = internalGetOutputs().build(OutputsDefaultEntryHolder.defaultEntry);
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.serving.Predict.PredictResponse) {
          return mergeFrom((tensorflow.serving.Predict.PredictResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.serving.Predict.PredictResponse other) {
        if (other == tensorflow.serving.Predict.PredictResponse.getDefaultInstance()) return this;
        if (other.hasModelSpec()) {
          mergeModelSpec(other.getModelSpec());
        }
        internalGetMutableOutputs().mergeFrom(
            other.internalGetOutputs());
        bitField0_ |= 0x00000002;
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto>
                outputs__ = input.readMessage(
                    OutputsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
                internalGetMutableOutputs().ensureBuilderMap().put(
                    outputs__.getKey(), outputs__.getValue());
                bitField0_ |= 0x00000002;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getModelSpecFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private tensorflow.serving.Model.ModelSpec modelSpec_;
      private com.google.protobuf.SingleFieldBuilder<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> modelSpecBuilder_;
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       * @return Whether the modelSpec field is set.
       */
      public boolean hasModelSpec() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       * @return The modelSpec.
       */
      public tensorflow.serving.Model.ModelSpec getModelSpec() {
        if (modelSpecBuilder_ == null) {
          return modelSpec_ == null ? tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        } else {
          return modelSpecBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public Builder setModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          modelSpec_ = value;
        } else {
          modelSpecBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public Builder setModelSpec(
          tensorflow.serving.Model.ModelSpec.Builder builderForValue) {
        if (modelSpecBuilder_ == null) {
          modelSpec_ = builderForValue.build();
        } else {
          modelSpecBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public Builder mergeModelSpec(tensorflow.serving.Model.ModelSpec value) {
        if (modelSpecBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            modelSpec_ != null &&
            modelSpec_ != tensorflow.serving.Model.ModelSpec.getDefaultInstance()) {
            getModelSpecBuilder().mergeFrom(value);
          } else {
            modelSpec_ = value;
          }
        } else {
          modelSpecBuilder_.mergeFrom(value);
        }
        if (modelSpec_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public Builder clearModelSpec() {
        bitField0_ = (bitField0_ & ~0x00000001);
        modelSpec_ = null;
        if (modelSpecBuilder_ != null) {
          modelSpecBuilder_.dispose();
          modelSpecBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public tensorflow.serving.Model.ModelSpec.Builder getModelSpecBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getModelSpecFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      public tensorflow.serving.Model.ModelSpecOrBuilder getModelSpecOrBuilder() {
        if (modelSpecBuilder_ != null) {
          return modelSpecBuilder_.getMessageOrBuilder();
        } else {
          return modelSpec_ == null ?
              tensorflow.serving.Model.ModelSpec.getDefaultInstance() : modelSpec_;
        }
      }
      /**
       * <pre>
       * Effective Model Specification used to process PredictRequest.
       * </pre>
       *
       * <code>.tensorflow.serving.ModelSpec model_spec = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder> 
          getModelSpecFieldBuilder() {
        if (modelSpecBuilder_ == null) {
          modelSpecBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              tensorflow.serving.Model.ModelSpec, tensorflow.serving.Model.ModelSpec.Builder, tensorflow.serving.Model.ModelSpecOrBuilder>(
                  getModelSpec(),
                  getParentForChildren(),
                  isClean());
          modelSpec_ = null;
        }
        return modelSpecBuilder_;
      }

      private static final class OutputsConverter implements com.google.protobuf.MapFieldBuilder.Converter<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder, org.tensorflow.framework.TensorProto> {
        @java.lang.Override
        public org.tensorflow.framework.TensorProto build(org.tensorflow.framework.TensorProtoOrBuilder val) {
          if (val instanceof org.tensorflow.framework.TensorProto) { return (org.tensorflow.framework.TensorProto) val; }
          return ((org.tensorflow.framework.TensorProto.Builder) val).build();
        }

        @java.lang.Override
        public com.google.protobuf.MapEntry<java.lang.String, org.tensorflow.framework.TensorProto> defaultEntry() {
          return OutputsDefaultEntryHolder.defaultEntry;
        }
      };
      private static final OutputsConverter outputsConverter = new OutputsConverter();

      private com.google.protobuf.MapFieldBuilder<
          java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder, org.tensorflow.framework.TensorProto, org.tensorflow.framework.TensorProto.Builder> outputs_;
      private com.google.protobuf.MapFieldBuilder<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder, org.tensorflow.framework.TensorProto, org.tensorflow.framework.TensorProto.Builder>
          internalGetOutputs() {
        if (outputs_ == null) {
          return new com.google.protobuf.MapFieldBuilder<>(outputsConverter);
        }
        return outputs_;
      }
      private com.google.protobuf.MapFieldBuilder<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder, org.tensorflow.framework.TensorProto, org.tensorflow.framework.TensorProto.Builder>
          internalGetMutableOutputs() {
        if (outputs_ == null) {
          outputs_ = new com.google.protobuf.MapFieldBuilder<>(outputsConverter);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return outputs_;
      }
      public int getOutputsCount() {
        return internalGetOutputs().ensureBuilderMap().size();
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      @java.lang.Override
      public boolean containsOutputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        return internalGetOutputs().ensureBuilderMap().containsKey(key);
      }
      /**
       * Use {@link #getOutputsMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getOutputs() {
        return getOutputsMap();
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      @java.lang.Override
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> getOutputsMap() {
        return internalGetOutputs().getImmutableMap();
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      @java.lang.Override
      public /* nullable */
org.tensorflow.framework.TensorProto getOutputsOrDefault(
          java.lang.String key,
          /* nullable */
org.tensorflow.framework.TensorProto defaultValue) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder> map = internalGetMutableOutputs().ensureBuilderMap();
        return map.containsKey(key) ? outputsConverter.build(map.get(key)) : defaultValue;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      @java.lang.Override
      public org.tensorflow.framework.TensorProto getOutputsOrThrow(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder> map = internalGetMutableOutputs().ensureBuilderMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return outputsConverter.build(map.get(key));
      }
      public Builder clearOutputs() {
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableOutputs().clear();
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      public Builder removeOutputs(
          java.lang.String key) {
        if (key == null) { throw new NullPointerException("map key"); }
        internalGetMutableOutputs().ensureBuilderMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto>
          getMutableOutputs() {
        bitField0_ |= 0x00000002;
        return internalGetMutableOutputs().ensureMessageMap();
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      public Builder putOutputs(
          java.lang.String key,
          org.tensorflow.framework.TensorProto value) {
        if (key == null) { throw new NullPointerException("map key"); }
        if (value == null) { throw new NullPointerException("map value"); }
        internalGetMutableOutputs().ensureBuilderMap()
            .put(key, value);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      public Builder putAllOutputs(
          java.util.Map<java.lang.String, org.tensorflow.framework.TensorProto> values) {
        for (java.util.Map.Entry<java.lang.String, org.tensorflow.framework.TensorProto> e : values.entrySet()) {
          if (e.getKey() == null || e.getValue() == null) {
            throw new NullPointerException();
          }
        }
        internalGetMutableOutputs().ensureBuilderMap()
            .putAll(values);
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <pre>
       * Output tensors.
       * </pre>
       *
       * <code>map&lt;string, .tensorflow.TensorProto&gt; outputs = 1;</code>
       */
      public org.tensorflow.framework.TensorProto.Builder putOutputsBuilderIfAbsent(
          java.lang.String key) {
        java.util.Map<java.lang.String, org.tensorflow.framework.TensorProtoOrBuilder> builderMap = internalGetMutableOutputs().ensureBuilderMap();
        org.tensorflow.framework.TensorProtoOrBuilder entry = builderMap.get(key);
        if (entry == null) {
          entry = org.tensorflow.framework.TensorProto.newBuilder();
          builderMap.put(key, entry);
        }
        if (entry instanceof org.tensorflow.framework.TensorProto) {
          entry = ((org.tensorflow.framework.TensorProto) entry).toBuilder();
          builderMap.put(key, entry);
        }
        return (org.tensorflow.framework.TensorProto.Builder) entry;
      }

      // @@protoc_insertion_point(builder_scope:tensorflow.serving.PredictResponse)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.serving.PredictResponse)
    private static final tensorflow.serving.Predict.PredictResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.serving.Predict.PredictResponse();
    }

    public static tensorflow.serving.Predict.PredictResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<PredictResponse>
        PARSER = new com.google.protobuf.AbstractParser<PredictResponse>() {
      @java.lang.Override
      public PredictResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<PredictResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<PredictResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public tensorflow.serving.Predict.PredictResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_serving_PredictRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictRequest_InputsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_serving_PredictRequest_InputsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictRequest_RequestOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_serving_PredictRequest_RequestOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictStreamedOptions_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_serving_PredictStreamedOptions_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictStreamedOptions_SplitDimensionsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_serving_PredictStreamedOptions_SplitDimensionsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_serving_PredictResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_serving_PredictResponse_OutputsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_tensorflow_serving_PredictResponse_OutputsEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n%tensorflow_serving/apis/predict.proto\022" +
      "\022tensorflow.serving\032&tensorflow/core/fra" +
      "mework/tensor.proto\032#tensorflow_serving/" +
      "apis/model.proto\"\310\005\n\016PredictRequest\0221\n\nm" +
      "odel_spec\030\001 \001(\0132\035.tensorflow.serving.Mod" +
      "elSpec\022>\n\006inputs\030\002 \003(\0132..tensorflow.serv" +
      "ing.PredictRequest.InputsEntry\022\025\n\routput" +
      "_filter\030\003 \003(\t\022L\n\030predict_streamed_option" +
      "s\030\005 \001(\0132*.tensorflow.serving.PredictStre" +
      "amedOptions\022\026\n\tclient_id\030\006 \001(\014H\000\210\001\001\022O\n\017r" +
      "equest_options\030\007 \001(\01321.tensorflow.servin" +
      "g.PredictRequest.RequestOptionsH\001\210\001\001\032F\n\013" +
      "InputsEntry\022\013\n\003key\030\001 \001(\t\022&\n\005value\030\002 \001(\0132" +
      "\027.tensorflow.TensorProto:\0028\001\032\204\002\n\016Request" +
      "Options\022\026\n\tclient_id\030\001 \001(\014H\000\210\001\001\022d\n\022deter" +
      "ministic_mode\030\002 \001(\0162C.tensorflow.serving" +
      ".PredictRequest.RequestOptions.Determini" +
      "sticModeH\001\210\001\001\"O\n\021DeterministicMode\022\"\n\036DE" +
      "TERMINISTIC_MODE_UNSPECIFIED\020\000\022\026\n\022FIXED_" +
      "DECODER_SLOT\020\001B\014\n\n_client_idB\025\n\023_determi" +
      "nistic_modeB\014\n\n_client_idB\022\n\020_request_op" +
      "tionsJ\004\010\004\020\005\"\257\002\n\026PredictStreamedOptions\022N" +
      "\n\rrequest_state\030\001 \001(\01627.tensorflow.servi" +
      "ng.PredictStreamedOptions.RequestState\022Y" +
      "\n\020split_dimensions\030\002 \003(\0132?.tensorflow.se" +
      "rving.PredictStreamedOptions.SplitDimens" +
      "ionsEntry\0326\n\024SplitDimensionsEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\005:\0028\001\"2\n\014RequestStat" +
      "e\022\010\n\004NONE\020\000\022\t\n\005SPLIT\020\001\022\r\n\tEND_SPLIT\020\002\"\320\001" +
      "\n\017PredictResponse\0221\n\nmodel_spec\030\002 \001(\0132\035." +
      "tensorflow.serving.ModelSpec\022A\n\007outputs\030" +
      "\001 \003(\01320.tensorflow.serving.PredictRespon" +
      "se.OutputsEntry\032G\n\014OutputsEntry\022\013\n\003key\030\001" +
      " \001(\t\022&\n\005value\030\002 \001(\0132\027.tensorflow.TensorP" +
      "roto:\0028\001B\003\370\001\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.TensorProtos.getDescriptor(),
          tensorflow.serving.Model.getDescriptor(),
        });
    internal_static_tensorflow_serving_PredictRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_serving_PredictRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictRequest_descriptor,
        new java.lang.String[] { "ModelSpec", "Inputs", "OutputFilter", "PredictStreamedOptions", "ClientId", "RequestOptions", });
    internal_static_tensorflow_serving_PredictRequest_InputsEntry_descriptor =
      internal_static_tensorflow_serving_PredictRequest_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_serving_PredictRequest_InputsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictRequest_InputsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_tensorflow_serving_PredictRequest_RequestOptions_descriptor =
      internal_static_tensorflow_serving_PredictRequest_descriptor.getNestedTypes().get(1);
    internal_static_tensorflow_serving_PredictRequest_RequestOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictRequest_RequestOptions_descriptor,
        new java.lang.String[] { "ClientId", "DeterministicMode", });
    internal_static_tensorflow_serving_PredictStreamedOptions_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_serving_PredictStreamedOptions_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictStreamedOptions_descriptor,
        new java.lang.String[] { "RequestState", "SplitDimensions", });
    internal_static_tensorflow_serving_PredictStreamedOptions_SplitDimensionsEntry_descriptor =
      internal_static_tensorflow_serving_PredictStreamedOptions_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_serving_PredictStreamedOptions_SplitDimensionsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictStreamedOptions_SplitDimensionsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_tensorflow_serving_PredictResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_serving_PredictResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictResponse_descriptor,
        new java.lang.String[] { "ModelSpec", "Outputs", });
    internal_static_tensorflow_serving_PredictResponse_OutputsEntry_descriptor =
      internal_static_tensorflow_serving_PredictResponse_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_serving_PredictResponse_OutputsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_tensorflow_serving_PredictResponse_OutputsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    descriptor.resolveAllFeaturesImmutable();
    org.tensorflow.framework.TensorProtos.getDescriptor();
    tensorflow.serving.Model.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
